package org.ventura.sistemafinanciero.entity;

// Generated 02-may-2014 11:48:28 by Hibernate Tools 4.0.0

import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * PersonaJuridica generated by hbm2java
 */
@Entity
@Table(name = "PERSONA_JURIDICA", schema = "BDSISTEMAFINANCIERO")
@NamedQueries({
		@NamedQuery(name = PersonaJuridica.FindAll, query = "SELECT p FROM PersonaJuridica p"),
		@NamedQuery(name = PersonaJuridica.FindByTipoAndNumeroDocumento, query = "SELECT p FROM PersonaJuridica p WHERE p.tipoDocumento.idTipoDocumento = :idtipodocumento AND p.numeroDocumento = :numerodocumento"),
		@NamedQuery(name = PersonaJuridica.FindByFilterText, query = "SELECT p FROM PersonaJuridica p WHERE p.numeroDocumento = :filtertext OR LOWER(p.razonSocial) LIKE '%:filtertext%'") })
public class PersonaJuridica implements java.io.Serializable {

	private static final long serialVersionUID = 1L;

	public final static String FindByTipoAndNumeroDocumento = "PersonaJuridica.FindByTipoAndNumeroDocumento";
	public final static String FindByFilterText = "PersonaJuridica.FindByFilterText";
	public final static String FindAll = "PersonaJuridica.FindAll";

	private BigInteger idPersonaJuridica;
	private TipoDocumento tipoDocumento;
	private PersonaNatural personaNatural;
	private String numeroDocumento;
	private String razonSocial;
	private String nombreComercial;
	private Date fechaConstitucion;
	private String direccion;
	private String referencia;
	private String telefono;
	private String celular;
	private String email;
	private String tipoEmpresa;
	private BigDecimal finLucro;
	private String ubigeo;
	private Set socios = new HashSet(0);
	private Set accionistas = new HashSet(0);

	public PersonaJuridica() {
	}

	public PersonaJuridica(BigInteger idPersonaJuridica,
			TipoDocumento tipoDocumento, String tipoEmpresa, BigDecimal finLucro) {
		this.idPersonaJuridica = idPersonaJuridica;
		this.tipoDocumento = tipoDocumento;
		this.tipoEmpresa = tipoEmpresa;
		this.finLucro = finLucro;
	}

	public PersonaJuridica(BigInteger idPersonaJuridica,
			TipoDocumento tipoDocumento, PersonaNatural personaNatural,
			String numeroDocumento, String razonSocial, String nombreComercial,
			Date fechaConstitucion, String direccion, String referencia,
			String telefono, String celular, String email, String tipoEmpresa,
			BigDecimal finLucro, String ubigeo, Set socios, Set accionistas) {
		this.idPersonaJuridica = idPersonaJuridica;
		this.tipoDocumento = tipoDocumento;
		this.personaNatural = personaNatural;
		this.numeroDocumento = numeroDocumento;
		this.razonSocial = razonSocial;
		this.nombreComercial = nombreComercial;
		this.fechaConstitucion = fechaConstitucion;
		this.direccion = direccion;
		this.referencia = referencia;
		this.telefono = telefono;
		this.celular = celular;
		this.email = email;
		this.tipoEmpresa = tipoEmpresa;
		this.finLucro = finLucro;
		this.ubigeo = ubigeo;
		this.socios = socios;
		this.accionistas = accionistas;
	}

	@Id
	@Column(name = "ID_PERSONA_JURIDICA", unique = true, nullable = false, precision = 22, scale = 0)
	public BigInteger getIdPersonaJuridica() {
		return this.idPersonaJuridica;
	}

	public void setIdPersonaJuridica(BigInteger idPersonaJuridica) {
		this.idPersonaJuridica = idPersonaJuridica;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_TIPO_DOCUMENTO", nullable = false)
	public TipoDocumento getTipoDocumento() {
		return this.tipoDocumento;
	}

	public void setTipoDocumento(TipoDocumento tipoDocumento) {
		this.tipoDocumento = tipoDocumento;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ID_REPRESENTANTE_LEGAL")
	public PersonaNatural getPersonaNatural() {
		return this.personaNatural;
	}

	public void setPersonaNatural(PersonaNatural personaNatural) {
		this.personaNatural = personaNatural;
	}

	@Column(name = "NUMERO_DOCUMENTO", length = 40, columnDefinition = "nchar")
	public String getNumeroDocumento() {
		return this.numeroDocumento;
	}

	public void setNumeroDocumento(String numeroDocumento) {
		this.numeroDocumento = numeroDocumento;
	}

	@Column(name = "RAZON_SOCIAL", length = 40, columnDefinition = "nvarchar2")
	public String getRazonSocial() {
		return this.razonSocial;
	}

	public void setRazonSocial(String razonSocial) {
		this.razonSocial = razonSocial;
	}

	@Column(name = "NOMBRE_COMERCIAL", length = 40, columnDefinition = "nvarchar2")
	public String getNombreComercial() {
		return this.nombreComercial;
	}

	public void setNombreComercial(String nombreComercial) {
		this.nombreComercial = nombreComercial;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "FECHA_CONSTITUCION", length = 7)
	public Date getFechaConstitucion() {
		return this.fechaConstitucion;
	}

	public void setFechaConstitucion(Date fechaConstitucion) {
		this.fechaConstitucion = fechaConstitucion;
	}

	@Column(name = "DIRECCION", length = 140, columnDefinition = "nvarchar2")
	public String getDireccion() {
		return this.direccion;
	}

	public void setDireccion(String direccion) {
		this.direccion = direccion;
	}

	@Column(name = "REFERENCIA", length = 140, columnDefinition = "nvarchar2")
	public String getReferencia() {
		return this.referencia;
	}

	public void setReferencia(String referencia) {
		this.referencia = referencia;
	}

	@Column(name = "TELEFONO", length = 40, columnDefinition = "nvarchar2")
	public String getTelefono() {
		return this.telefono;
	}

	public void setTelefono(String telefono) {
		this.telefono = telefono;
	}

	@Column(name = "CELULAR", length = 40, columnDefinition = "nvarchar2")
	public String getCelular() {
		return this.celular;
	}

	public void setCelular(String celular) {
		this.celular = celular;
	}

	@Column(name = "EMAIL", length = 40, columnDefinition = "nvarchar2")
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "TIPO_EMPRESA", nullable = false, length = 60, columnDefinition = "nvarchar2")
	public String getTipoEmpresa() {
		return this.tipoEmpresa;
	}

	public void setTipoEmpresa(String tipoEmpresa) {
		this.tipoEmpresa = tipoEmpresa;
	}

	@Column(name = "FIN_LUCRO", nullable = false, precision = 22, scale = 0)
	public BigDecimal getFinLucro() {
		return this.finLucro;
	}

	public void setFinLucro(BigDecimal finLucro) {
		this.finLucro = finLucro;
	}

	@Column(name = "UBIGEO", length = 12, columnDefinition = "nvarchar2")
	public String getUbigeo() {
		return this.ubigeo;
	}

	public void setUbigeo(String ubigeo) {
		this.ubigeo = ubigeo;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "personaJuridica")
	public Set<Socio> getSocios() {
		return this.socios;
	}

	public void setSocios(Set socios) {
		this.socios = socios;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "personaJuridica")
	public Set<Accionista> getAccionistas() {
		return this.accionistas;
	}

	public void setAccionistas(Set accionistas) {
		this.accionistas = accionistas;
	}

}
