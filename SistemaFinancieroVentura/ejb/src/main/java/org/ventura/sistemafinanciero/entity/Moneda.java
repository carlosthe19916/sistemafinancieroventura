package org.ventura.sistemafinanciero.entity;

// Generated 02-may-2014 11:48:28 by Hibernate Tools 4.0.0

import java.math.BigDecimal;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Moneda generated by hbm2java
 */
@Entity
@Table(name = "MONEDA", schema = "BDSISTEMAFINANCIERO")
public class Moneda implements java.io.Serializable {

	private BigDecimal idMoneda;
	private String denominacion;
	private String simbolo;
	private BigDecimal estado;
	private Set transaccionCompraVentasForIdMonedaRecibido = new HashSet(0);
	private Set bovedas = new HashSet(0);
	private Set transaccionCompraVentasForIdMonedaEntregado = new HashSet(0);
	private Set monedaDenominacions = new HashSet(0);
	private Set pendienteCajas = new HashSet(0);
	private Set transaccionCajaCajas = new HashSet(0);

	public Moneda() {
	}

	public Moneda(BigDecimal idMoneda, String denominacion, String simbolo,
			BigDecimal estado) {
		this.idMoneda = idMoneda;
		this.denominacion = denominacion;
		this.simbolo = simbolo;
		this.estado = estado;
	}

	public Moneda(BigDecimal idMoneda, String denominacion, String simbolo,
			BigDecimal estado, Set transaccionCompraVentasForIdMonedaRecibido,
			Set bovedas, Set transaccionCompraVentasForIdMonedaEntregado,
			Set monedaDenominacions, Set pendienteCajas,
			Set transaccionCajaCajas) {
		this.idMoneda = idMoneda;
		this.denominacion = denominacion;
		this.simbolo = simbolo;
		this.estado = estado;
		this.transaccionCompraVentasForIdMonedaRecibido = transaccionCompraVentasForIdMonedaRecibido;
		this.bovedas = bovedas;
		this.transaccionCompraVentasForIdMonedaEntregado = transaccionCompraVentasForIdMonedaEntregado;
		this.monedaDenominacions = monedaDenominacions;
		this.pendienteCajas = pendienteCajas;
		this.transaccionCajaCajas = transaccionCajaCajas;
	}

	@Id
	@Column(name = "ID_MONEDA", unique = true, nullable = false, precision = 22, scale = 0)
	public BigDecimal getIdMoneda() {
		return this.idMoneda;
	}

	public void setIdMoneda(BigDecimal idMoneda) {
		this.idMoneda = idMoneda;
	}

	@Column(name = "DENOMINACION", nullable = false, length = 40,columnDefinition = "nvarchar2")
	public String getDenominacion() {
		return this.denominacion;
	}

	public void setDenominacion(String denominacion) {
		this.denominacion = denominacion;
	}

	@Column(name = "SIMBOLO", nullable = false, length = 10, columnDefinition="nvarchar2")
	public String getSimbolo() {
		return this.simbolo;
	}

	public void setSimbolo(String simbolo) {
		this.simbolo = simbolo;
	}

	@Column(name = "ESTADO", nullable = false, precision = 22, scale = 0)
	public BigDecimal getEstado() {
		return this.estado;
	}

	public void setEstado(BigDecimal estado) {
		this.estado = estado;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "monedaByIdMonedaRecibido")
	public Set<TransaccionCompraVenta> getTransaccionCompraVentasForIdMonedaRecibido() {
		return this.transaccionCompraVentasForIdMonedaRecibido;
	}

	public void setTransaccionCompraVentasForIdMonedaRecibido(
			Set transaccionCompraVentasForIdMonedaRecibido) {
		this.transaccionCompraVentasForIdMonedaRecibido = transaccionCompraVentasForIdMonedaRecibido;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "moneda")
	public Set<Boveda> getBovedas() {
		return this.bovedas;
	}

	public void setBovedas(Set bovedas) {
		this.bovedas = bovedas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "monedaByIdMonedaEntregado")
	public Set<TransaccionCompraVenta> getTransaccionCompraVentasForIdMonedaEntregado() {
		return this.transaccionCompraVentasForIdMonedaEntregado;
	}

	public void setTransaccionCompraVentasForIdMonedaEntregado(
			Set transaccionCompraVentasForIdMonedaEntregado) {
		this.transaccionCompraVentasForIdMonedaEntregado = transaccionCompraVentasForIdMonedaEntregado;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "moneda")
	public Set<MonedaDenominacion> getMonedaDenominacions() {
		return this.monedaDenominacions;
	}

	public void setMonedaDenominacions(Set monedaDenominacions) {
		this.monedaDenominacions = monedaDenominacions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "moneda")
	public Set<PendienteCaja> getPendienteCajas() {
		return this.pendienteCajas;
	}

	public void setPendienteCajas(Set pendienteCajas) {
		this.pendienteCajas = pendienteCajas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "moneda")
	public Set<TransaccionCajaCaja> getTransaccionCajaCajas() {
		return this.transaccionCajaCajas;
	}

	public void setTransaccionCajaCajas(Set transaccionCajaCajas) {
		this.transaccionCajaCajas = transaccionCajaCajas;
	}

}
